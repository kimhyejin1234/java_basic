package etc.api.collection.set;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Random;
import java.util.Set;



public class LottoSimulator {
static Random r = new Random();
    
    static int prize1 = 0; //1등 당첨 횟수를 세 줄 변수
    static int prize2 = 0; //2등 당첨 횟수를 세 줄 변수
    static int prize3 = 0; //3등 당첨 횟수를 세 줄 변수
    static int prize4 = 0; //4등 당첨 횟수를 세 줄 변수
    static int prize5 = 0; //5등 당첨 횟수를 세 줄 변수
    static int failCnt = 0; // 당첨 횟수를 세 줄 변수
    static int[] win =  new int[5]; // 이번주 로또 번호 출력
    
    public static Set<Integer> createLotto() {
        
    	/*
         - 1~45 범위의 난수 6개를 생성하셔서
          컬렉션 자료형에 모아서 리턴해 주세요.
          무엇을 쓰든 상관하지 않겠습니다.
          중복이 발생하면 안됩니다.
         */
    	Set<Integer> set = new HashSet<>();
    	
    	while(set.size()<6) {
    		set.add((int) (Math.random()*45) + 1);
    	}
    	return set;
    	
    }
    
    
    //보너스 번호를 생성하는 메서드
    public static int createBonusNum(Set<Integer> nums) {
        
        /*
         - 매개값으로 전달되는 당첨 번호 집합을 전달 받으신 후
          당첨번호들을 피해서 보너스번호 하나만 뽑아 주세요.
          범위는 마찬가지로 1 ~ 45 사이의 난수입니다.
         */
    	while(true) {
	    	int bonusNum =  (int) (Math.random()*45) + 1;
	    	for(Integer n:nums) {
				if(n != bonusNum) {
					return bonusNum;
				}
			}
    	}
    }
    
    //당첨 등수를 알려주는 메서드
    public static void checkLottoNumber(Set<Integer> nums,Set<Integer> saveNums, int bonusNum) {
        /*
         매개값으로 당첨번호집합, 구매한 로또 번호집합, 보너스번호를 받습니다.
         내 로또 번호와 당첨번호를 비교하여
         일치하는 횟수를 세 주신 후 등수를 판단하세요.
         판단된 등수에 해당하는 static 변수의 값을 올려 주시면 됩니다.
         6개 일치 -> 1등
         5개 일치 + 보너스번호 일치 -> 2등
         5개 일치 -> 3등
         4개 일치 -> 4등
         3개 일치 -> 5등
         나머지 -> 꽝
         */
    	int i = 0; //일치 번호 횟수
    	boolean flag = false;
    	for(Integer s:saveNums) {
    		for(Integer n:nums) {
    			if(s==n) {  
    				i++;
    				break;
    			}
    		}
    		if(s == bonusNum) {
    			flag = true;
    		}
    	}
    	
    	switch (i) {
		case 6:
			prize1 ++;
			break;
		case 5:
			prize3 ++;
			if(flag) {
				prize2 ++;
			}
			break;
		case 4:
			prize4 ++;
			break;
		case 3:
			prize5 ++;
			break;
		default:
			failCnt ++;
			break;
		}
    	
    }
    
    public static void main(String[] args) {
    	//로또 번호 생성 메서드를 호출해서 당첨 번호를 하나 고정시키세요.
    	Set<Integer>  createNums =  createLotto();
    	  
        
        //보너스번호도 하나 고정시키세요.
    	int bonusNum  = createBonusNum(createNums);
        
    	
        while(true) {

        	/*
            - 1등이 당첨 될 때까지 반복문을 돌립니다.
            - 1등이 당첨 된다면, 1등이 되기까지 누적 당첨 횟수를 출력하고
             반복문을 종료합니다.
            - 로또를 구매하기 위한 금액도 출력하세요. (long)
            */
        	
        	Set<Integer> saveNums = new HashSet<>();
        	while(saveNums.size()<6) {
        		saveNums.add((int) (Math.random()*45) + 1);
        	}
        	
        	checkLottoNumber(createNums ,saveNums,bonusNum);
        	if(prize1 == 1) {
        		break;
        	}
        }
        
        int total = prize1+prize2+prize3+prize4+prize5+ failCnt;
        long totalAmount = 1000 * (long)total ; //1등이 될 때 까지의 총 금액
        System.out.println("1등 : " + prize1);
        System.out.println("2등 : " + prize2);
        System.out.println("3등 : " + prize3);
        System.out.println("4둥 : " + prize4);
        System.out.println("5등 : " + prize5);
        System.out.println("꽝 : " + failCnt);
        System.out.println("총 횟수  : " + total) ;
        System.out.println("총 투자금액  : " + totalAmount) ;
        
        System.out.println("-------------------------------");
        System.out.printf("-이번주 1등 번호 : %d , 보너스 번호 : %d -" , createNums,bonusNum);
        
        
	}
}
